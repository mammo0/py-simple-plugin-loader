name: PyPI package

on:
  push:
    branches:
      - master
    tags:
      - v*
  pull_request:

jobs:
  test:
    name: Test package
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9]
    steps:
        # checkout the repo
        - uses: actions/checkout@v2
        # setup python environment
        - name: Set up Python ${{ matrix.python-version }}
          uses: actions/setup-python@v2
          with:
            python-version: ${{ matrix.python-version }}
        # install the test dependencies
        - name: Install test dependencies
          run: |
            python -m pip install --upgrade pip
            pip install pipenv
            pipenv lock --dev --keep-outdated
            pipenv sync --dev
        - name: Test package
          run: |
            pipenv run pytest

  build-publish:
    name: Build and publish package
    if: ${{ github.event_name == 'push' }}
    needs: test
    runs-on: ubuntu-latest
    steps:
        # checkout the repo
        - uses: actions/checkout@v2
          with:
            # fetch complete history because it's needed in setup.py
            fetch-depth: 0
        # also fetch all tags
        - run: git fetch origin +refs/tags/*:refs/tags/*
        # setup python environment
        - name: Set up Python 3.6
          uses: actions/setup-python@v2
          with:
            python-version: "3.6"
        # install the build dependencies
        - name: Install build dependencies
          run: |
            python -m pip install --upgrade pip
            pip install --upgrade setuptools wheel twine pipenv-setup
        - name: Update setup.py according to Pipfile
          run: pipenv-setup sync
        - name: Build package
          run: python setup.py sdist bdist_wheel
        # on a regular push publish the package to test PyPI repo
        - name: Publish test package
          env:
            TWINE_REPOSITORY_URL: https://test.pypi.org/legacy/
            TWINE_USERNAME: __token__
            TWINE_PASSWORD: ${{ secrets.PYPI_TEST_TOKEN }}
          run: twine upload dist/*
        # on a release push publish the package to the regular PyPI repo
        - name: Publish release package
          if: startsWith(github.event.ref, 'refs/tags')
          env:
            TWINE_USERNAME: __token__
            TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
          run: twine upload dist/*
